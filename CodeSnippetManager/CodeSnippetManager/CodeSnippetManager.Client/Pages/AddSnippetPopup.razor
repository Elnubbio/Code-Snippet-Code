@rendermode InteractiveAuto
@inject IHttpClientFactory clientFactory
@using CodeSnippetManager.Data.Models

<button @onclick="ShowModal">Create Snippet</button>

<Modal IsVisible="isModalVisible" IsVisibleChanged="OnModalVisibilityChanged">
    <h2>Code:</h2>
    <textarea @bind="SnippetText" class="flex-grow-1"></textarea>
    <button @onclick="clicky">Save Snippet</button>
    <button @onclick="clicky2">Snippets</button>
</Modal>

@code {

    public string SnippetText = "";
    protected async Task clicky()
    {
        Snippet snipTest = new() { Content = SnippetText };
        var client = clientFactory.CreateClient();
        var request = new HttpRequestMessage(HttpMethod.Post, "Snippets/Add");
        request.Content = JsonContent.Create(snipTest);
        var response = await client.SendAsync(request);
        var content = await response.Content.ReadAsStringAsync();
        Console.WriteLine(content);
    }

    protected async Task clicky2()
    {
        var client = clientFactory.CreateClient();
        var request = new HttpRequestMessage(HttpMethod.Get, "Snippets/GetAll");
        var response = await client.SendAsync(request);
        var content = await response.Content.ReadAsStringAsync();
        Console.WriteLine(content);
    }

    private bool isModalVisible = false;

    private void ShowModal()
    {
        isModalVisible = true;
    }

    private void OnModalVisibilityChanged(bool visible)
    {
        isModalVisible = visible;
    }
}