@rendermode InteractiveAuto
@using System.Net.Http.Json
@using CodeSnippetManager.Data.Models
@inject IHttpClientFactory clientFactory
<h3>SnippetGrid</h3>

@foreach (var snippet in listOfSnippets)
{
    <div>
        <button @onclick="()=>DeleteSnippet(snippet.Id)">delete</button>
        <label>@snippet.Content</label>
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await RefreshSnippets();
    }

    List<Snippet> listOfSnippets { get; set; } = [];

    private async Task DeleteSnippet(int snippetId)
    {
        var client = clientFactory.CreateClient();
        var request = new HttpRequestMessage(HttpMethod.Post, "Snippets/Delete");
        request.Content = JsonContent.Create(snippetId);
        var response = await client.SendAsync(request);
        Console.WriteLine(response.Content);

        await RefreshSnippets();
    }

    private async Task RefreshSnippets()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "Snippets/GetAll");
        var client = clientFactory.CreateClient();
        var response = await client.SendAsync(request);
        listOfSnippets = await response.Content.ReadFromJsonAsync<List<Snippet>>() ?? [];
        foreach (var snippet in listOfSnippets)
        {
            Console.WriteLine(snippet.Content);
        }
    }
}
